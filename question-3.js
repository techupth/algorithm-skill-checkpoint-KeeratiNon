/*
What is the Big O notation for Function findStudentById . Explain your reason.
Answer:

Big O = O(n) เพราะการทำงานเป็นแบบ linear search ทำให้จำนวนรอบในการทำงานแปรผันตรงตามจำนวนของข้อมูล
ยิ่งข้อมูลมีจำนวนมาก ก็จะยิ่งใช้จำนวนรอบมากขึ้นตามไปด้วย ยกตัวอย่างโจทย์ในข้อนี้ที่มีจำนวนข้อมูล 3 ตัวอย่าง ทำให้การ
ทำงานมากที่สุดมีทั้งหมด 3 รอบเพื่อไล่เช็คทุกตัว

*/

/* 
What is the Big O notation for Function findProductPrice. Explain your reason.
Answer:

Big O = O(log_n) เพราะใน products มีการเรียงชื่อมาให้แล้ว ทำให้เมื่อใช้ binary search ในการหาข้อมูล มีประสิทธิภาพมากกว่า
ซึ่งจำนวนรอบที่ทำงานในช่วงแรกจะมากตามครึ่งหนึ่งของจำนวนข้อมูลทั้งหมดและในรอบถัดๆไปก็จะเป็นการหาทีละครึ่ง ทำให้จำนวนรอบ
ในการหาลดลงทีละครึ่งตามไปด้วย หากมองเป็นกราฟจะเห็นได้ว่าความชันของกราฟในช่วงแรกจะมีความชันมากและค่อยๆลู่เข้าค่าคงที่ตามแนว
แกน x ยกตัวอย่าง หากมีข้อมูล 10 ตัวย่าง รอบแรกก็จะเเบ่งครึ่งจำนวนข้อมูล ทำให้เช็คจากข้อมูลที่อยู่ตรงกลาง คือ 5 จากนั้นยังไม่เจอข้อมูล
ก็จะไปทำงานที่ตำแหน่งที่ 8 หรือ 2 แบ่งครึ่งแบบนี้ไปเรื่อยๆจนกว่าจะเจอข้อมูลที่ mid

*/

/* 
Which function is more efficient and why?
Answer:

Binary search ของ findProductPrice เพราะหากมีข้อมูลเป็นจำนวนมาก linear search จะมีการทำงานที่เยอะมากๆตามไปด้วย
ต่างจาก binary search ที่จะลดจำนวนรอบทีละครึ่ง ทำให้ประสิทธิภาพการทำงานไม่หนักมากเหมือน linear search

*/
